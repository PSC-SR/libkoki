--- !ditz.rubyforge.org,2008-03-06/issue 
title: automatic thresholding of an image
desc: |-
  Light conditions will vary -- auto thresholding is better than tweaking a threshold value
  depending on the lighting.
  
  Otsu's method (http://en.wikipedia.org/wiki/Otsu%27s_method) or something similar could
  be used to perform this thresholding.
type: :feature
component: libkoki
release: "1.0"
reporter: Chris Kirkham <chrisjameskirkham@gmail.com>
status: :closed
disposition: :fixed
creation_time: 2011-08-11 21:49:12.606556 Z
references: []

id: 4e4389f5e968f009ebcdc1e0849b89056d06db60
log_events: 
- - 2011-08-11 21:49:13.718467 Z
  - Chris Kirkham <chrisjameskirkham@gmail.com>
  - created
  - ""
- - 2011-08-22 14:03:38.747474 Z
  - Chris Kirkham <chrisjameskirkham@gmail.com>
  - closed with disposition fixed
  - done.
- - 2011-08-23 11:05:49.494659 Z
  - Chris Kirkham <chrisjameskirkham@gmail.com>
  - changed status from closed to in_progress
  - |-
    Turns out the IsoData algorithm didn't work great on the image as a whole, so more work is necessary.
    Perhaps a choice of thresholding methods, IsoData and some other.
- - 2011-09-01 14:34:55.061388 Z
  - Chris Kirkham <chrisjameskirkham@gmail.com>
  - closed with disposition fixed
  - done, both global auto (good for marker code recovery) and local adaptive (good for an input image of varying brightness).
git_branch: 
